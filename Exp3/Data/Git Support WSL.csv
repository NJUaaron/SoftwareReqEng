"Jul 19, 2016",,
"Jul 21, 2016","This was fast. The thing literally came out yesterday for everyone.Actually, it's still not yet out, so support for this will take its time.",[]
"Aug 6, 2016",It would be great to use Bash on Ubuntu on Windows as the integrated terminal! Not to mention its git installation for the git tab. I can't +1 this enough! :),
"Aug 31, 2016",Noticed that we can use the Bash on Ubuntu on Windows terminal in the integrated terminal now. That's awesome! Now we just need the git integration with the git version installed through bash on ubuntu on windows.,
"Sep 18, 2016",+1,
"Oct 12, 2016",+1,
"Oct 19, 2016",+1,
"Oct 31, 2016","This would be great not just for git but for extensions as well.  I use the vscode-go extension and it shells out to use the command line tools often.  I'd like it if it could shell out to bash as opposed to windows terminal.  It would also need access to environment variables from bash.  Basically, I want it to think it is in a bash environment even though it is in windows.Thanks.",
"Aug 24, 2017",+1,
"Aug 31, 2017",+1,
"Sep 4, 2017",+1,
"Sep 25, 2017",+1,
"Sep 29, 2017",+1,
"Oct 26, 2017",+1,
"Nov 9, 2017",+1,
"Nov 17, 2017",+1 :),
"Nov 17, 2017",+1,
"Nov 20, 2017",@joaomoreno Wanted to check if there any work being done on this WSL git + VSCode integration?,
"Feb 8, 2019","Keep in mind if you go with the wslgit.exe approach, it works but it's deadly slow. So slow that it's completely unusable (even when things outside of Git was very fast).",
"Feb 11, 2019",@joaomoreno is a native integration in VSC planned?,
"Feb 14, 2019",It's 2019.. It's been about 3 years since this issue was brought up... We see no progress at all.Git with vscode is the only reason I am in linux.. using wsl and git for windows together causes some crazy problems like losing permissions on some folders/files. So please vscode guys do something.,
"Feb 14, 2019","I know it's not a permanent solution but if you haven't tried wslgit with vscode, give it a shot. It's stable and performs quite well for me.",
"Feb 14, 2019",Well I think a heads up would be good. Is it being worked on? Can we contribute or test? Donâ€™t leave us in the dark ,
"Feb 15, 2019","@phifa I think @mmirus is referring to https://github.com/andy-5/wslgit which is an unofficial workaround.Edit: Some have reported that it's quite slow compared to using Git for Windows, so I still prefer to have both Git for Windows and WSL installed. Only downside is that I have to ensure my SSH keys and .gitconfig are replicated.Would obviously prefer to stop using Git for Windows though!",
"Feb 18, 2019",wslgit is slow as hell and it's a cludgy workaround.Also SCM/git is just one part of the WSL integration we need from VSCode,
"Mar 9, 2019",Figured it out by using this : https://github.com/andy-5/wslgitWorks great for me WSL &amp; Git &amp; Visual Studio Code without Git Bash,
"Mar 14, 2019",@joaomoreno any updates on this?,
"Mar 17, 2019",Any update on this?,
"Mar 19, 2019","wslgit is not slow at all in my experience if set up properly.Just remember to set the WSLGIT_USE_INTERACTIVE_SHELL variable in Windows to false, see the documentation in its README.",
"Mar 30, 2019",the integrated terminal is working fine with the wsl the issue is the vscode git sidebar is not working at all with the wsl,
"Apr 2, 2019","@panoscool This is what I did to resolve the side bar issue. I opened ""Git Bash"" in Windows and and ran:git config --global core.excludesfile '/the/absolute/path/to/your/global/git/ignore'So currently Git Bash and WSL are referencing the same ignore file globally. I was not sure how Git Bash handles absolute paths so I did ""cd ~"" and ""$PWD"" and it returned ""/c/Users/username"".",
"May 2, 2019","We just announced remote development with VS Code, check out the blog post for details https://code.visualstudio.com/blogs/2019/05/02/remote-development",
"May 3, 2019","We just announced remote development with VS Code, check out the blog post for details https://code.visualstudio.com/blogs/2019/05/02/remote-development@RMacfarlane  Thank you for the heads-up. It really looks great! I have one question though:Now with the Visual Studio Code Remote - WSL extension in action, will VS Code automatically pick up the Git installation in WSL or do we have to manually configure ""git.path"" in the WSL specific settings?Update [2019/05/03]: Upon investigation, it appears Git installation in WSL is picked up automatically. This is awesome!",
"May 3, 2019","It automatically finds git from the WSL system path, no need to configure anything",
"May 3, 2019","With remote-wsl extension, vscode will use toolchains in wsl, but sometimes we just want to use git in wsl and continue to use the toolchain in Windows.",
"May 3, 2019","One probably helpful piece of information regarding the new Remote - WSL extension, which I needed to do in my project:If you open your folder from the windows path, like you used to - such as from your recent projects menu, the extension won't kick in - everything will still be in Windows mode.What I had to do was to use Remote-WSL: Open Window, then the File &gt; Open Folder... menu will show you Linux paths, so you need to browse for your folder from there (/mnt/...) and open that instead.After doing this the git used by Code will be the native one from WSL, and your terminal windows will also use bash by default.",
"May 3, 2019",@andreialecu if you open the project from wsl terminal using code . wsl Git is working right?,
"May 6, 2019","@panoscool code-insiders . doesn't seem to work properly from the WSL terminal. It still opens via the Windows path, meaning the extension doesn't kick in - so you don't get WSL Git or any other WSL capabilities.It also prints an error to the console, which code . doesn't: $ code-insiders . /c/Users/&lt;snip&gt;/AppData/Local/Programs/Microsoft VS Code Insiders/bin/code-insiders: line 29: cmd.exe: command not foundOpened #73330EDIT: Actually, it does work if you have /c/Windows/System32 in your PATH (which would be there by default), but I disabled Windows path propagation into WSL. I posted a workaround in the issue opened above.",
"May 7, 2019","My experience after a few days with Remote-WSL (valid May 2019):I went back to using wslgit on stable Code. While Remote-WSL is extremely promising, I kept running into file system issues, such as various EACCES errors, and even hard lockups because of the NTFS&lt;-&gt;WSL file access issues and VS Code was exacerbating them as well.One example (using React Native) was weird lockups of the Android emulator in Android Studio that could only be resolved by a computer reboot. Additionally, Android Studio would rarely build the project without complaining about being unable to replace some file because of access denied issues. Had to randomly close/reopen Code to try to get past these errors.One other annoying thing for example is that you are unable to rename a directory after opening it via Remote-WSL. It's a known limitation, among others listed here: https://code.visualstudio.com/docs/remote/wsl#_common-limitations-in-wslThese will all likely be resolved once WSL 2.0, which was just announced, goes live. It should hit the Windows Insider channel in late June: https://devblogs.microsoft.com/commandline/announcing-wsl-2/In the mean time, wslgit, while it has its quirks, is currently less of a hindrance to work with.",
"May 8, 2019","Thanks for the feedback, @andreialecu. Yes, the fs locking issues are nasty. As you said, they will only go away with the VM2 mode. In some cases you can work around the issue by defining watcher excludes ('files.watcherExclude"") for folders where other tools work (e.g. node_modules...)For the cmd issue you created microsoft/vscode-remote-release#170, thanks!","['https://github.com/microsoft/vscode', 'https://github.com/microsoft/vscode']"
