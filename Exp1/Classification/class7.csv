17,Why is debugging better in an IDE? ,"I've been a software developer for over twenty years programming in C Perl SQL Java  PHP JavaScript and recently Python.  I've never had a problem I could not debug using some careful thought and well-placed debugging  statements? Can you suggest resources (tutorials books screencasts) that show the finer techniques of IDE debugging? Sweet answers!  Thanks much to everyone for taking the time.  Very illuminating.  I voted up many and voted none down.   Some notable points:Some examples of some abilities that an IDE debugger will give you over trace messages in code: In summary print statements are (generally) > toolkit at your fingertips. When I first started coding I couldn't understand what the big deal with debuggers was and I thought I could achieve anything with tracing (granted that was on unix and the debugger was GDB).  But once you learn how to properly use a graphical debugger you don't want to go back to print statements. An IDE debugger lets you change thevalues of variables at run-time.  An IDEdebugger lets you see the value ofvariables you didn't know you wantedto see when execution began.  An IDEdebugger lets you see the call stackand examine the state of thefunction passed weird values. (think this function is called fromhundreds of places you don't knowwhere these weird values are comingfrom)  An IDE debugger lets youconditionally break execution at anypoint in code based on a conditionnot a line number. An IDE debugger will let you examine the state of the program in the case of an unhandled exception instead of just crapping out. Here's one thing that you definitely cannot debug with ""print"" statement which is when a customer brings you memory dump and says ""your program crashed can you tell me why?"" I think debugging using print statements is a lost art and very important for every developer to learn.  Once you know how to do that certain classes of bugs become much easier to debug that way than through an IDE.  Programmers who know this technique also have a really good feel of what's useful information to put in a log message (not to mention you'll actually end up reading the log) for non-debugging purposes as well. That said you really should know how to use the step-through debugger since for a different class of bugs it is WAY easier.  I'll leave it up to the other excellent answers already posted to explain why :) Off the top of my head: As alternative to debug in IDE you can try great Google Chrome extension ) is .NET only so you might want an older one (like in the first link) if you want native code debugging (it covers both .NET and native).  I personally feel the answer is as simple as ""A integrated debugger/IDE gives you a wealth of different information quickly without the need for punching in commands. The information tends to be there in front of you without you haven't tell it what to show you. The > in which the information can be retrieved is what makes them better than just command-line debugging or ""printf"" debugging. Advantages of a debugger over a printf () Can set watchpoints. This is one of my favourite ways of finding memory corruptions Can debug a binary that you can't recompile at the moment Can debug a binary that takes a long time to recompile Can change variables on the fly Can call functions on the fly  Doesn't have the problem where debug statemenets are not flushed and hence timing issue can not be debugged acuratly Debuggers help with core dumps print statements dont' This is what I use most on VS.NET debugging windows: In summary it gives me a 360 degree view of the state of my executing code not just a small window.  Never found a book teaching this kind of stuff but then again it seems to be quite simple it's pretty much WYSIWYG.  A debugger can attach to a running process Often easier to debug threaded code from a debugger With an IDE debugger you can see the values of ALL the variables in the current scope (all  the way up the call stack) whenever you halt execution.  Print statements can be great but dumping so much information to the screen at any given place can produce a >. You just need to define some actions that print required state in each breakpoint start the console debugger with . A problem with using print statements is it makes a mess of your code. IE you have a function with 10 parts to it and you know it crashes somewhere but you're not sure where. So you add in 10 extra print statements to pinpoint where the bug is. Once you've found and solved your bug you now have to clean up by removing all of those print statements. Maybe you'll do that. Maybe you'll forget and it'll end up in production and your user's console will be full of debug prints. Wauw do I like this question. I never dared to pose it... It seems that people just have different ways of working.For me what works best is: I've earned my living programming for over 40 years now working at non-trivial technical and scientific applications in C++ and Python daily and I have the personal experience that a debugger doesn't help me a bit. I don't say that's good. I don't say that's bad. I just want to share it. It's not just debugging.  An IDE helps you build better software faster in a lot of ways: I could go on."
18,macos - C++ IDE for Macs ,I teach a C++ course using Visual Studio.  One of my students has a Mac and was looking for an IDE to use on his machine. What would be good to recommend? library. It's the one I use. Another (albeit non-free) option is to install VMware Fusion or Parallels Desktop on the Mac and run Windows with Visual Studio in a VM. This works really pretty well.  The downsides are: The upside is that you and the student don't need to hassle with differences in the IDE that may not be accounted for in your instruction materials. If you are looking for a full-fledged IDE like Visual StudioI think Eclipse might be your best bet. Eclipse is also highly extensible and configurable. See here:  is free and good which is lucky because it's pretty much the only option on the Mac.
20,Using Emacs as an IDE ,"Currently my workflow with Emacs when I am coding in C or C++ involves three windows.  The largest on the right contains the file I am working with.  The left is split into two the bottom being a shell which I use to type in compile or make commands and the top is often some sort of documentation or README file that I want to consult while I am working.  Now I know there are some pretty expert Emacs users out there and I am curious what other Emacs functionally is useful if the intention is to use it as a complete IDE.  Specifically most IDEs usually fulfill these functions is some form or another: For a few of these it's pretty obvious how Emacs can fit these functions but what about the rest?  Also if a specific language must be focused on I'd say it should be C++.   One user pointed out that I should have been more specific when I said 'what about the rest'.  Mostly I was curious about efficient version control as well as documentation lookup.  For example in SLIME it is fairly easy to do a quick hyperspec lookup on a Lisp function.  Is there a quick way to look up something in C++ STL documentation (if I forgot the exact syntax of  for example)?You'll have to be specific as to what you mean by ""the rest"".  Except for the object inspector (that I""m aware of) emacs does all the above quite easily: Edit: I realize my answer about documentation lookup really pertained to code navigation.  Here's some more to-the-point info:   Google searching will no doubt reveal further examples. As the second link shows looking up functions (and whatever) in other documentation can be done even if not supported out of the box. I have to recommend .  I'm also working on article about using Emacs as Development Environment for many languages - C/C++ Java Perl Lisp/Scheme Erlang etc... For version control there are several things that you can use depending on what version control system you use. But some of the functionality is common to all of them. It is pretty simple to use no need to customize your init file.You just need to start emacs in daemon mode; This will create an emacs server then you can connect it either from terminal or from gui. I'd also recommend to create some aliases to make it easy to call.  This way emacs will fire up even faster than gedit promise. The one possible problem here if you are running emacs daemon from your casual user you probably can't connect emacs server as  .  For compiling your code it's best to use shell-commands. I am working on this project  very useful.  Truly emacs can be made to do anything. In the recent years Clang became an important part of the Emacs C++ support. Atila Neves had a talk on CppCon 2015:. The other thing it has that I find useful are parsers for location messages so that if you have a call stack trace and want to edit at a particular place in the callstack this front-end interface will can do that.  By far this program could use improvement. But then it could also use people working on it to improve it.  Disclaimer: I work on realgud"
22,java - 'Must Override a Superclass Method' Errors after importing a project into Eclipse ,"Anytime I have to re-import my projects into Eclipse (if I reinstalled Eclipse or changed the location of the projects)  of my overridden methods are not formatted correctly causing the error: The method must override a superclass method It may be noteworthy to mention this is with Android projects - for whatever reason the method argument values are not always populated so I have to manually populate them myself. For instance: will be initially populated like this: The odd thing is if I remove my code and have Eclipse automatically recreate the method it uses the same argument names I already had so I don't really know where the problem is other then it auto-formatting the method for me. This becomes quite a pain having to manually recreate ALL my overridden methods by hand. If anyone can explain why this happens or how to fix it .. I would be very happy. Maybe it is due to the way I am formatting the methods which are inside an argument of another method?Eclipse is defaulting to Java 1.5 and you have classes implementing interface methods (which in Java 1.6 can be annotated with . No idea why but this will solve it. This is my second time encounter this problem.first time according the alphazero's recommendation it worked.but in the second time I set to 1.6 it don't work it just like 'CACHE' this error after clean and rebuild. Try to switch off 'Build Automatically' as Rollin_s said -&gt; error still here! So I removed the problem project (already set to 1.6) from Package Explorer and import it again -&gt; it start a rebuild and no error this time Hope this help someone Fixing  must override a super class method error is not difficult You just need to change Java source version to 1.6 because from Java 1.6 @Override annotation can be used along with interface method. In order to change source version to 1.6 follow below steps : In my case this problem happened when I imported a Maven project into Eclipse. To solve this I added the following in : Then in the context menu of the project go to ""Maven -&gt; Update Project ..."" and press OK. That's it. Hope this helps. In my case none the solutions above works. I have to checkout my source code to another folder. From eclipse select File &gt; Switch workSpaces &gt; Other... and then import code to the new workspaces. it works after that.   This happens when your maven project uses different Compiler Compliance level and Eclipse IDE uses different Compiler Compliance level. In order to fix this we need to change the Compiler Compliance level of Maven project to the level IDE uses. 1) To See Java Compiler Compliance level uses in Eclipse IDE  *) Window -&gt; Preferences -&gt; Compiler -&gt; Compiler Compliance level : 1.8 (or 1.7 1.6  ect)  2) To Change Java Compiler Compliance level of Maven project *) Go to  ""Project"" -&gt;  ""Properties"" -&gt; Select ""Java Compiler"" -&gt; Change the Compiler Compliance level : 1.8 (or 1.7 1.6  ect)  "
25,LLVM C++ IDE for Windows ,Is there some C/C++ IDE for Windows which is  (merged from answers):LLVM is supported in  as far as I know. I am the main author of the plug-in so you can ask any questions related to it. The plug-in offers the basic functionality for Clang and llvm-gcc compilation and support Linux and Windows (w/ Cygwin &amp; MiNGW). LLVM tools such as assembler archiver linker and static compiler (llc) are configured and can be customized via UI. The plug-in offers all the benefits that IDE can offer such as easy configuration and building with one action.  The only drawback is that it is not ready yet as it lacks of some of the advanced features that LLVM can offer such as Clang analyze and smart auto-completion. The plug-in is also not tested well and may not work perfectly therefore I hope I can get user feedback via mailing list found from Google code development site (listed below). I wish I had time to develop it further. I only develop it in my spare time which is very limited. I welcome any developers to participate and contribute to the project. Development site: Eclipse marketplace (100% free &amp; open-source):.It can be downloaded s as of 2018 which is crucial for debugging).
40,Best C++ IDE or Editor for Windows ,"What is the best C++ IDE or editor for using on Windows? I use Notepad++ but am missing IntelliSense from Visual Studio.I've found the latest release of NetBeans which includes C/C++ support to be excellent.  a powerful open-source cross platform IDE. It has code completion amongst other features. I will quote myself from this question: Someone already said this before me  but QtCreator is really good for Qt4  development. Not only it has a really good code  completion support. It also knows a  little more about the code and what to  complete then I thought I needed. For  example it knows about slots/signals.  This means that connecting  slots/signals via code is much easier  then before. The code editing is really nice. I  remember that when refactoring code  (a few variables starting with  underscore) it remembered the cursor  position between lines and this made  the refactoring much easier. The code  indentation is smart enough to not get  in my way (KDevelop was configurable  but QtCreator learns how I code. At  least it feels like it does). Then there are the cool key  combinations. Most of the  functionality of the IDE can be  accessed using shortcuts. The  ""control+k"" thingie is a nice thing  which some command line users would  like but I am more GUI oriented. I  don't use it. What I really like is the split  window command. Yes KDevelop3 does  it but not as nice as QtCreator. My  favorite is control+e3 which I use to  display the header and implementations  of my classes. Once again the  navigation here is the best I have  seen (control+eo). It also has a nice SCM integration. I  usually use SVN and quite frankly  it's not as good as I need: no  shortcut to diff the project no diff  to commit the whole project no option  to commit several files. I also don't like the ""total  integration of external tools"". I  still like the external QtAssistant -  control+tab is easier to read large  articles. But.... when you define a  QString s and 3 lines bellow you want  to read the interface of QString you  put your cursor on ""s"" and press F1 -  the assistant comes as a sidebar with  QString's documentation. A huge  advantage. Want to follow a definition? F2 to the  help. F4? Changes  header/implementation (yes eclipse  does this better...). The debugger is good. It's not as good  as VisualStudio but ... it has support  for Qt4 internals (you can see the  value of QString and QList!). I can continue... but IMHO you will  need to give it a second and third  try. It really is a good product. Not  as flexible as Eclipse (hi  ryansstack) but it's a really small  fast and young project. I stopped  developing QDevelop because I really  found what I was looking for. ps: yes I mean stopped developing  QDevelop. I was in the development  team. My response is for Qt4 development only. Be warned. SlickEdit is very cool and does support something like intellisense. At my current company I now use Visual Studio and I've mostly gotten used to it - but there are still some SlickEdit features I miss.  As a complete all-in one package Visual Studio 2008 is the best IDE for C++ development with Windows Visual studio is great but there are few tricks you can enhance it with. SonicFileFinder is one - helps you to search source files by partial match. You can map solution-tree to Alt+1 partial filename search to alt+2 and properties-window to alt+3. These are the three most used windows.  Another great tool that is ofter misunderstood is ctrl+shift+F shortcut for searching file contents. People dont use because it's so slow but my advice is - deal with it. Searching  the whole solution (or even all files in project folder) is only slow the first time you use it. Consequitive searches are as fast as jump-to-definition-feature. I've tried SlickEdit Notepad++ emacs jEdit and Visual Studio. VS wins hands-down for Best Windows IDE.  jEdit is probably the best GUI cross-platform editor/almost-IDE and emacs is probably the best terminal cross-platform editor/almost-IDE. The advantage with using these is that when you jump to a Mac or Linux box you know how they work.  I tried Eclipse but it ran like a no-legged dog it was so slow so I didn't use it much. Maybe tech is better now but eh. With Intellisense code folding edit and continue and a whole host of other features Visual Studio is certainly the best IDE.  However for simple code editing I often use UltraEdit.  It has some great features not found in Visual Studio.  One surprisingly useful feature is being able to select a column in the editor.  You can find and replace within the column (useful for tabs vs. spaces wars...) delete the column etc... How about CodeBlocks i find it so fine with me especially the new 10.05 version. I would recommend . Here's another vote for Visual Studio.  The debugger and Intellisense are definitely it's hallmarks.  While other IDE's offer code-completion I've often found them to be somewhat sluggish in this area for some reason (sluggish being a reference to the speed at which code-completion occurs and offers selections).   Other than VS NetBeans is a good polished IDE and is updated on a very regular cycle. I think it's largely a matter of taste but I would recommend begginers to stick to a pure editor (vi emacs...) instead of a full fledged IDE so they can figure out the whole toolchain that modern IDEs hide. Just for the record my weapon of choice is Emacs. personally i dont like microsoft......I hate to admit that visual studio is the best IDE i ever use.....Netbeans is gud but drasticaly slow....other free IDEs are useless..so people try to stick with VS.... M$ VS2008 is a better IDE for this. The question says specifically IDE so I am guessing thats what you want. In that case the main options are Visual Studio and Eclipse CDT as stated above. Of those I personally prefer Eclipse. However don't necessarily limit yourself to an IDE. I prefer to use vim as my editor and WinDbg as my debugger. For compilation your project will probably dictate this. I currently use NMAke on the command line. Use Visual Studio 2010. You can get the full version free with "
45,Best Fortran IDE ,"Is there anybody using Fortran on stackoverflow? What IDE do you use and which one do you think to be the best? Seems lots of people surround me are quite inconvenient with Intel Visual Fortran. Because there is no support for intellisense refactoring etc.Well as others already mentioned you could use instead of an IDE a separate text editor. Several come to mind;   VIM (or one of the family) - great editing capabilities very customizable. Unfortunatelly it is still an editor not an IDE. It can be customized in a variety of ways of course but that gets boring after a while.  Also it's syntax highlighting capabilities are somewhat wrongly made. Also has some problems/confusions with free/fixed format and f77/f90/f95 ...   Emacs - pretty much same advantages/shortcomings as the above.   In general editors like the above mentioned can be used but in that case it is best to choose one from the start and stick to it; modifying your work habits as you go; since customizing everything can be time consuming to suit your needs. Most editors have problems with fortran's syntax since they're used to C's (where everything that ""opens"" has a ""close""). As far as IDE's goes your options are not that great:   > What about these ones: . I do not like Code::Blocks... We use an in-house extension to visual studio to get code completion for our fortran code and to assist us with debugging. But even so there is a lot of room for improvement. Our main issues are:  We used Sun workshop and it was very good but there is no windows version. jedit has a nice fortran mode and you can define keybindings for the compiler and debugger.for small to medium sized projects it is quite nice. it also has svn and multiple files search. also very nice is hypersearch where you get a list of you matches and you can go to the position with a single click. another goodie is a plugin for gdb and for ctags. you can very easily script all functions using jython. it feels a little bit like a modern version of emacs that uses python instead of lisp. check out the plugin manager. it lets you download all the plugins from the server and installs them for you (like in eclipse). "
65,ide - Is there a way to collapse all code blocks in Eclipse? ,"Eclipse has that ""+/-"" on the left to expand and collapse blocks of code. I've got tens of thousands of lines to go through and would really like to just collapse everything and selectively expand blocks to look at them.There is a hotkey mapped by default to  close all code blocks is "
66,autocomplete - laravel 5 ide autocompletion ,I want to switch to laravel 5 but have some trouble with ide - autocompletion. I'm using phpstorm.In google the answers always end up with suggesting to use  . But it seems like it is broken for Laravel 5. The steps I am doing are:  Install Laravel 5 Require ide-helper Added 'Barryvdh\LaravelIdeHelper\IdeHelperServiceProvider' Trying to generate the helper file But it always breaks with following error: Maybe someone had the same issue and can help me.I'm open for different solutions for autocompletion other than barryvdh's ide-helper.I had the same problem and this fixed it: Before you run .
69,Mono IDE on Windows ,Is there any IDE for coding mono on windows platform?MonoDevelop has now released a installer for Windows. You no longer need to build it from source. It is available from  (A fork of #develop) back to Windows. SharpDevelop comes to mind... I've found this quick howto for setting up a development environment with it and Mono and windows: Use Delphi Prism 2010
72,Best C++ IDE for *nix ,"What is the best C++ IDE for a *nix envirnoment? I have heard the C/C++ module of Eclipse is decent as well as Notepad++ but beyond these two I have no real idea. Any thoughts or comments?On Ubuntu some the IDEs that are available in the repositories are: There is also:   And of course everyone's favourite text-based editors: Its true that vim and emacs are very powerful tools but the learning curve is very steep..  I really don't like  that much I find it buggy and a bit too clunky.I've started using  as a bare-bones but functional and > IDE. It has a basic code-completion feature and is a nice clean [Gnome] interface."". See  [edit]It does have it's own C++ class libs (as Hernan points out) but nothing stops you from using any other class libs like the SDL or you can roll your own. You can even use boost if you like but I must say I find some of the supplied classes &amp; techniques to be more useful."
74,ide - How do I run Python code from Sublime Text 2? ,I want to set up a complete Python IDE in Sublime Text 2. I want to know how to run the Python code from within the editor. Is it done using build system? How do I do it ?Tools -&gt; Build System -&gt; (choose) Python then:  Sublime Text probably can't find the Python Interpreter. When trying to run your program see the log and find the reference to Python in path. The point is that it tries to run python via command line the cmd looks like: If you can't run python from cmd Sublime Text can't too.(Try it yourself in cmd type python in it and run it python commandline should appear) You can either change the Sublime Text build formula or the System :*>for example:    manually: (preferable)Add  at the end of the string.
